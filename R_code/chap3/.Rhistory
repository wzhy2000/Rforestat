) +scale_y_continuous(breaks = seq(0, max(mydata$Height, na.rm = TRUE), by = 5))
pdf("图3.7.pdf", height = 6, width = 8, family = "GB1")
ggplot(mydata, aes(x = Age.Group, y = Height, fill = Age.Group)) +
geom_jitter(width = 0.3, size = 2, alpha = 0.6, shape = 21, stroke = 0.5) +
geom_boxplot(outlier.shape = NA, color = "black", alpha = 0.7) +
stat_summary(fun = mean, geom = "point", shape = 18, color = "red", size = 3) +
stat_compare_means(comparisons = list(c("幼龄林", "中龄林"), c("中龄林", "过熟林"), c("幼龄林", "近熟林"), c("成熟林", "过熟林")), label = "p.signif", method = "t.test", size = 5, vjust = 0.5, color = "red") +scale_fill_brewer(palette = "Pastel1") +
labs(x = "Age Group", y = "Tree Height (m)", fill = "Age group") +
theme_minimal(base_size = 14) +
theme(
text = element_text(family = "serif"),
axis.title.x = element_text(face = "bold", size = 14),
axis.title.y = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 12),
legend.position = "top",
panel.grid.major = element_line(color = "grey80", size = 0.5),
panel.grid.minor = element_blank()
) +scale_y_continuous(breaks = seq(0, max(mydata$Height, na.rm = TRUE), by = 5))
dev.off()
library(ggpointdensity)
mydata$Age.Group <- factor(mydata$Age.Group, levels = c("幼龄林", "中龄林", "近熟林","成熟林","过熟林"))
ggplot(mydata, aes(x = DBH, y = Height)) +
geom_pointdensity(size = 2) +
scale_color_viridis_c(option = "turbo") +
geom_smooth(method = "loess", formula = y ~ x, color = "blue", fill = "red", linetype = "dashed", size = 1.7) +
facet_grid(~ Age.Group, scales = "free") +
labs(
x = "Diameter at Breast Height (cm)",
y = "Tree Height (m)"
) +scale_x_continuous(breaks = seq(0, max(mydata$DBH, na.rm = TRUE), by = 4)) +scale_y_continuous(breaks = seq(0, max(mydata$Height, na.rm = TRUE), by = 5))
mycols <- c("red", "yellow", "blue", "pink", "green")
p1 <- ggplot(mydata, aes(x = DBH, y = Height)) +
geom_point(aes(color = Age.Group), size = 1) +
labs( x = "DBH(cm)", y = "Height(m)") +
scale_color_manual(values = mycols)+theme(legend.position = "NA")+
theme(legend.key = element_rect(fill = "lightblue", color = "black")) +
theme(legend.position = c(0.9, 0.21))
p1
px <- ggplot(mydata, aes(x = DBH, fill = Age.Group)) +
geom_density(alpha = 0.6) +
theme(legend.position = "none") +
xlab("")+scale_fill_manual(values = mycols)
px
py <- ggplot(mydata, aes(y = Height, fill = Age.Group)) +
geom_density(alpha = 0.6) +
theme(legend.position = "none") +
ylab("")+scale_fill_manual(values = mycols)
py
library( "gridExtra")
library(ggplot2)
library(RColorBrewer)
library(ggpubr)
mydata <- read.csv("lysdata.csv", fileEncoding = "GBK", sep = ",")
attach(mydata)
pdf("图3.7.pdf", height = 6, width = 8, family = "GB1")
ggplot(mydata, aes(x = Age.Group, y = Height, fill = Age.Group)) +
geom_jitter(width = 0.3, size = 2, alpha = 0.6, shape = 21, stroke = 0.5) +
geom_boxplot(outlier.shape = NA, color = "black", alpha = 0.7) +
stat_summary(fun = mean, geom = "point", shape = 18, color = "red", size = 3) +
stat_compare_means(comparisons = list(c("幼龄林", "中龄林"), c("中龄林", "过熟林"), c("幼龄林", "近熟林"), c("成熟林", "过熟林")), label = "p.signif", method = "t.test", size = 5, vjust = 0.5, color = "red") +scale_fill_brewer(palette = "Pastel1") +
labs(x = "Age Group", y = "Tree Height (m)", fill = "Age group") +
theme_minimal(base_size = 14) +
theme(
text = element_text(family = "serif"),
axis.title.x = element_text(face = "bold", size = 14),
axis.title.y = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 12),
legend.position = "top",
panel.grid.major = element_line(color = "grey80", size = 0.5),
panel.grid.minor = element_blank()
) +scale_y_continuous(breaks = seq(0, max(mydata$Height, na.rm = TRUE), by = 5))
dev.off()
library(ggpointdensity)
mydata$Age.Group <- factor(mydata$Age.Group, levels = c("幼龄林", "中龄林", "近熟林","成熟林","过熟林"))
pdf("图3.8.pdf", height = 6, width = 8, family = "GB1")
ggplot(mydata, aes(x = DBH, y = Height)) +
geom_pointdensity(size = 2) +
scale_color_viridis_c(option = "turbo") +
geom_smooth(method = "loess", formula = y ~ x, color = "blue", fill = "red", linetype = "dashed", size = 1.7) +
facet_grid(~ Age.Group, scales = "free") +
labs(
x = "Diameter at Breast Height (cm)",
y = "Tree Height (m)"
) +scale_x_continuous(breaks = seq(0, max(mydata$DBH, na.rm = TRUE), by = 4)) +scale_y_continuous(breaks = seq(0, max(mydata$Height, na.rm = TRUE), by = 5))
dev.off()
mycols <- c("red", "yellow", "blue", "pink", "green")
p1 <- ggplot(mydata, aes(x = DBH, y = Height)) +
geom_point(aes(color = Age.Group), size = 1) +
labs( x = "DBH(cm)", y = "Height(m)") +
scale_color_manual(values = mycols)+theme(legend.position = "NA")+
theme(legend.key = element_rect(fill = "lightblue", color = "black")) +
theme(legend.position = c(0.9, 0.21))
p1
px <- ggplot(mydata, aes(x = DBH, fill = Age.Group)) +
geom_density(alpha = 0.6) +
theme(legend.position = "none") +
xlab("")+scale_fill_manual(values = mycols)
px
py <- ggplot(mydata, aes(y = Height, fill = Age.Group)) +
geom_density(alpha = 0.6) +
theme(legend.position = "none") +
ylab("")+scale_fill_manual(values = mycols)
py
library( "gridExtra")
pdf("图3.9.pdf", height = 6, width = 8, family = "GB1")
library(ggplot2)
library(RColorBrewer)
library(ggpubr)
mydata <- read.csv("lysdata.csv", fileEncoding = "GBK", sep = ",")
attach(mydata)
pdf("图3.7.pdf", height = 6, width = 8, family = "GB1")
ggplot(mydata, aes(x = Age.Group, y = Height, fill = Age.Group)) +
geom_jitter(width = 0.3, size = 2, alpha = 0.6, shape = 21, stroke = 0.5) +
geom_boxplot(outlier.shape = NA, color = "black", alpha = 0.7) +
stat_summary(fun = mean, geom = "point", shape = 18, color = "red", size = 3) +
stat_compare_means(comparisons = list(c("幼龄林", "中龄林"), c("中龄林", "过熟林"), c("幼龄林", "近熟林"), c("成熟林", "过熟林")), label = "p.signif", method = "t.test", size = 5, vjust = 0.5, color = "red") +scale_fill_brewer(palette = "Pastel1") +
labs(x = "Age Group", y = "Tree Height (m)", fill = "Age group") +
theme_minimal(base_size = 14) +
theme(
text = element_text(family = "serif"),
axis.title.x = element_text(face = "bold", size = 14),
axis.title.y = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 12),
legend.position = "top",
panel.grid.major = element_line(color = "grey80", size = 0.5),
panel.grid.minor = element_blank()
) +scale_y_continuous(breaks = seq(0, max(mydata$Height, na.rm = TRUE), by = 5))
dev.off()
library(ggpointdensity)
mydata$Age.Group <- factor(mydata$Age.Group, levels = c("幼龄林", "中龄林", "近熟林","成熟林","过熟林"))
pdf("图3.8.pdf", height = 6, width = 8, family = "GB1")
ggplot(mydata, aes(x = DBH, y = Height)) +
geom_pointdensity(size = 2) +
scale_color_viridis_c(option = "turbo") +
geom_smooth(method = "loess", formula = y ~ x, color = "blue", fill = "red", linetype = "dashed", size = 1.7) +
facet_grid(~ Age.Group, scales = "free") +
labs(
x = "Diameter at Breast Height (cm)",
y = "Tree Height (m)"
) +scale_x_continuous(breaks = seq(0, max(mydata$DBH, na.rm = TRUE), by = 4)) +scale_y_continuous(breaks = seq(0, max(mydata$Height, na.rm = TRUE), by = 5))
dev.off()
mycols <- c("red", "yellow", "blue", "pink", "green")
p1 <- ggplot(mydata, aes(x = DBH, y = Height)) +
geom_point(aes(color = Age.Group), size = 1) +
labs( x = "DBH(cm)", y = "Height(m)") +
scale_color_manual(values = mycols)+theme(legend.position = "NA")+
theme(legend.key = element_rect(fill = "lightblue", color = "black")) +
theme(legend.position = c(0.9, 0.21))
p1
px <- ggplot(mydata, aes(x = DBH, fill = Age.Group)) +
geom_density(alpha = 0.6) +
theme(legend.position = "none") +
xlab("")+scale_fill_manual(values = mycols)
px
py <- ggplot(mydata, aes(y = Height, fill = Age.Group)) +
geom_density(alpha = 0.6) +
theme(legend.position = "none") +
ylab("")+scale_fill_manual(values = mycols)
py
library( "gridExtra")
pdf("图3.9.pdf", height = 6, width = 8, family = "GB1")
blankPlot<-ggplot()+geom_blank(aes(1,1))+ theme_void()
grid.arrange(px, blankPlot, p1, py,ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
dev.off()
library(forestat)
data(crassifolia)
radar_data <- crassifolia
boxplot(CW ~ Plot1, radar_data,
xlab = "样地类型", ylab = "实测冠幅CW/m", cex.lab = 1.5, cex.axis = 1.5)
par(mar = c(5, 6, 4, 2))
boxplot(CW ~ Plot1, radar_data,
xlab = "样地类型", ylab = "实测冠幅CW/m", cex.lab = 1.5, cex.axis = 1.5)
library(forestat)
data(crassifolia)
radar_data <- crassifolia
pdf("图3.2.pdf", height = 6, width = 12, family = "GB1")
par(mar = c(5, 6, 4, 2))
boxplot(CW ~ Plot1, radar_data,
xlab = "样地类型", ylab = "实测冠幅CW/m", cex.lab = 1.5, cex.axis = 1.5)
dev.off()
View(mydata)
library(ggpointdensity)
mydata$Age.Group <- factor(mydata$Age.Group, levels = c("幼龄林", "中龄林", "近熟林","成熟林","过熟林"))
pdf("图3.8.pdf", height = 5, width = 8, family = "GB1")
ggplot(mydata, aes(x = DBH, y = Height)) +
geom_pointdensity(size = 2) +
scale_color_viridis_c(option = "turbo") +
geom_smooth(method = "loess", formula = y ~ x, color = "blue", fill = "red", linetype = "dashed", size = 1.7) +
facet_grid(~ Age.Group, scales = "free") +
labs(
x = "Diameter at Breast Height (cm)",
y = "Tree Height (m)"
) +scale_x_continuous(breaks = seq(0, max(mydata$DBH, na.rm = TRUE), by = 4)) +scale_y_continuous(breaks = seq(0, max(mydata$Height, na.rm = TRUE), by = 5))
dev.off()
library(forestat)
setwd("D:\\大连理工大学\\R语言书稿\\Rforestat\\R_code\chap4")
setwd("D:\\大连理工大学\\R语言书稿\\Rforestat\\R_code\\chap4")
set.seed(123)
x <- 1:10
y <- x + rnorm(10)
plot(x, y, xlab = "X轴", ylab = "Y轴", pch = 19, col = "blue", cex.axis = 1.5, cex.lab = 1.5)
points(x, y, pch = 17, col = "red")
lines(x, y, col = "black")
text(5, 8, "示例文本", cex = 1.5)
legend("topright", legend = c("点", "线"), col = c("red", "black"), pch = c(17, NA), lty = 1, cex = 1.2)
legend("topright", legend = c("点", "线"), col = c("red", "black"), pch = c(17, NA), lty = 1, cex = 1)
x <- 1:10
y <- x + rnorm(10)
plot(x, y, xlab = "X轴", ylab = "Y轴", pch = 19, col = "blue", cex.axis = 1.5, cex.lab = 1.5)
points(x, y, pch = 17, col = "red")
lines(x, y, col = "black")
text(5, 8, "示例文本", cex = 1.5)
legend("topright", legend = c("点", "线"), col = c("red", "black"), pch = c(17, NA), lty = 1, cex = 1)
x <- 1:10
y <- x + rnorm(10)
plot(x, y, xlab = "X轴", ylab = "Y轴", pch = 19, col = "blue", cex.axis = 1.5, cex.lab = 1.5)
points(x, y, pch = 17, col = "red")
lines(x, y, col = "black")
text(5, 8, "示例文本", cex = 1.5)
setwd("D:\\大连理工大学\\R语言书稿\\Rforestat\\R_code\\chap2")
set.seed(123)
pdf("图2.3a.pdf", width = 8, height = 6, family = "GB1")
x <- 1:10
y <- x + rnorm(10)
plot(x, y, xlab = "X轴", ylab = "Y轴", pch = 19, col = "blue", cex.axis = 1.5, cex.lab = 1.5)
points(x, y, pch = 17, col = "red")
lines(x, y, col = "black")
text(5, 8, "示例文本", cex = 1.5)
legend("topright", legend = c("点", "线"), col = c("red", "black"), pch = c(17, NA), lty = 1, cex = 1)
dev.off()
?dotchart
categories <- c("A", "B", "C", "D", "E", "F")
values <- c(1, 2, 3, 4, 5, 6)
dotchart(values, labels = categories,
xlab = "Values",
main = "点图示例",
col = "blue", pch = 16)
?dotchart
?graphics
categories <- c("A", "B", "C", "D", "E", "F")
values <- c(1, 2, 3, 4, 5, 6)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类"
main = "点图示例",
categories <- c("A", "B", "C", "D", "E", "F")
values <- c(1, 2, 3, 4, 5, 6)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
main = "点图示例",
col = "blue", pch = 16)
categories <- c("A", "B", "C", "D", "E", "F")
values <- c(1, 2, 3, 4, 5, 6)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
main = "点图示例",
col = "black", pch = 16)
set.seed(123)
categories <- c("A", "B", "C", "D", "E", "F")
values <- runif(6, min = 0, max = 10)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
main = "点图示例",
col = "black", pch = 16)
set.seed(123)
categories <- c("A", "B", "C", "D", "E", "F")
values <- runif(6, min = 0, max = 10)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
main = "点图示例",
col = "black", pch = 16, horizontal = FALSE)
stripchart(values, group.names = categories,
vertical = TRUE,
xlab = "分类", ylab = "Values",
main = "垂直点图示例")
set.seed(123)
categories <- c("A", "B", "C", "D", "E", "F")
values <- runif(6, min = 0, max = 10)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
main = "点图示例",
col = "black", pch = 16)
set.seed(123)
pdf("图2.3a.pdf", width = 8, height = 6, family = "GB1")
x <- 1:10
y <- x + rnorm(10)
plot(x, y, xlab = "X轴", ylab = "Y轴", pch = 19, col = "blue", cex.axis = 1.5, cex.lab = 1.5)
points(x, y, pch = 17, col = "red")
lines(x, y, col = "black")
text(5, 8, "示例文本", cex = 1.5)
legend("topright", legend = c("点", "线"), col = c("red", "black"), pch = c(17, NA), lty = 1, cex = 1)
dev.off()
pdf("图2.3b.pdf", width = 8, height = 6, family = "GB1")
categories <- c("A", "B", "C", "D", "E", "F")
values <- c(1, 2, 3, 4, 5, 6)
bp <- barplot(values, names.arg = categories, xlab = "分类", ylab = "值", col = "lightblue", ylim = c(0, max(values) + 2), cex.lab = 1.5, cex.names = 1.5 )
text(bp, values + 0.3, labels = values, col = "black", cex = 1.5)
dev.off()
pdf("图2.3c.pdf", width = 8, height = 6, family = "GB1")
set.seed(123)
categories <- c("A", "B", "C", "D", "E", "F")
values <- runif(6, min = 0, max = 10)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
main = "点图示例",
col = "black", pch = 16)
dev.off()
pdf("图2.3d.pdf", width = 8, height = 6, family = "GB1")
data <- rnorm(100)
hist(data, xlab = "值", ylab = "频率", col = "orange", xlim = c(-3, 3), ylim = c(0,30), breaks = 10, main = "", cex.lab = 1.5, cex.axis = 1.5)
abline(v = mean(data), col = "red", lwd = 2)
dev.off()
pdf("图2.3c.pdf", width = 8, height = 6, family = "GB1")
set.seed(123)
categories <- c("A", "B", "C", "D", "E", "F")
values <- runif(6, min = 0, max = 10)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
col = "black", pch = 16)
dev.off()
pdf("图2.3c.pdf", width = 8, height = 6, family = "GB1")
set.seed(123)
categories <- c("A", "B", "C", "D", "E", "F")
values <- runif(6, min = 0, max = 10)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
col = "black", pch = 16, cex = 2)
dev.off()
?dochart
?dotchart
set.seed(123)
categories <- c("A", "B", "C", "D", "E", "F")
values <- runif(6, min = 0, max = 10)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
col = "black", pch = 16, cex = 2)
pdf("图2.3c.pdf", width = 8, height = 6, family = "GB1")
set.seed(123)
categories <- c("A", "B", "C", "D", "E", "F")
values <- runif(6, min = 0, max = 10)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
col = "black", pch = 16, cex = 1.5)
dev.off()
set.seed(123)
categories <- c("A", "B", "C", "D", "E", "F")
values <- runif(6, min = 0, max = 10)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
col = "black", pch = 16, cex = 1.5, cex.lab = 1.5, cex.axis = 1.5)
pdf("图2.3c.pdf", width = 8, height = 6, family = "GB1")
set.seed(123)
categories <- c("A", "B", "C", "D", "E", "F")
values <- runif(6, min = 0, max = 10)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
col = "black", pch = 16, cex = 1.5, cex.lab = 1.5, cex.axis = 1.5)
dev.off()
set.seed(123)
categories <- c("A", "B", "C", "D", "E", "F")
values <- runif(6, min = 0, max = 10)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
col = "black", pch = 16, cex = 1.5, cex.lab = 1, cex.axis = 1)
pdf("图2.3c.pdf", width = 8, height = 6, family = "GB1")
set.seed(123)
categories <- c("A", "B", "C", "D", "E", "F")
values <- runif(6, min = 0, max = 10)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
col = "black", pch = 16, cex = 1.5, cex.lab = 1, cex.axis = 1)
dev.off()
pdf("图2.3b.pdf", width = 9.6, height = 7.2, family = "GB1")
categories <- c("A", "B", "C", "D", "E", "F")
values <- c(1, 2, 3, 4, 5, 6)
bp <- barplot(values, names.arg = categories, xlab = "分类", ylab = "值", col = "lightblue", ylim = c(0, max(values) + 2), cex.lab = 1.5, cex.names = 1.5 )
text(bp, values + 0.3, labels = values, col = "black", cex = 1.5)
dev.off()
pdf("图2.3b.pdf", width = 11.2, height = 8.4, family = "GB1")
categories <- c("A", "B", "C", "D", "E", "F")
values <- c(1, 2, 3, 4, 5, 6)
bp <- barplot(values, names.arg = categories, xlab = "分类", ylab = "值", col = "lightblue", ylim = c(0, max(values) + 2), cex.lab = 1.5, cex.names = 1.5 )
text(bp, values + 0.3, labels = values, col = "black", cex = 1.5)
dev.off()
set.seed(123)
pdf("图2.3a.pdf", width = 8, height = 6, family = "GB1")
x <- 1:10
y <- x + rnorm(10)
plot(x, y, xlab = "X轴", ylab = "Y轴", pch = 19, col = "blue", cex.axis = 1.5, cex.lab = 1.5)
points(x, y, pch = 17, col = "red")
lines(x, y, col = "black")
text(5, 8, "示例文本", cex = 1.5)
legend("topright", legend = c("点", "线"), col = c("red", "black"), pch = c(17, NA), lty = 1, cex = 1)
dev.off()
pdf("图2.3b.pdf", width = 8, height = 6, family = "GB1")
categories <- c("A", "B", "C", "D", "E", "F")
values <- c(1, 2, 3, 4, 5, 6)
bp <- barplot(values, names.arg = categories, xlab = "分类", ylab = "值", col = "lightblue", ylim = c(0, max(values) + 2), cex.lab = 1.5, cex.names = 1.5 )
text(bp, values + 0.3, labels = values, col = "black", cex = 1.5)
dev.off()
pdf("图2.3c.pdf", width = 89.6, height = 7.2, family = "GB1")
set.seed(123)
categories <- c("A", "B", "C", "D", "E", "F")
values <- runif(6, min = 0, max = 10)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
col = "black", pch = 16, cex = 1.5, cex.lab = 1, cex.axis = 1)
dev.off()
pdf("图2.3d.pdf", width = 8, height = 6, family = "GB1")
data <- rnorm(100)
hist(data, xlab = "值", ylab = "频率", col = "orange", xlim = c(-3, 3), ylim = c(0,30), breaks = 10, main = "", cex.lab = 1.5, cex.axis = 1.5)
abline(v = mean(data), col = "red", lwd = 2)
dev.off()
pdf("图2.3c.pdf", width = 9.6, height = 7.2, family = "GB1")
set.seed(123)
categories <- c("A", "B", "C", "D", "E", "F")
values <- runif(6, min = 0, max = 10)
dotchart(values, labels = categories,
xlab = "Values", ylab = "分类",
col = "black", pch = 16, cex = 1.5, cex.lab = 1, cex.axis = 1)
dev.off()
getwd()
setwd("D:/大连理工大学/R语言书稿/Rforestat/R_code/chap3")
library(ggplot2)
library(RColorBrewer)
library(ggpubr)
mydata <- read.csv("lysdata.csv", fileEncoding = "GBK", sep = ",")
attach(mydata)
attach(mydata)
pdf("图3.7.pdf", height = 6, width = 8, family = "GB1")
ggplot(mydata, aes(x = Age.Group, y = Height, fill = Age.Group)) +
geom_jitter(width = 0.3, size = 2, alpha = 0.6, shape = 21, stroke = 0.5) +
geom_boxplot(outlier.shape = NA, color = "black", alpha = 0.7) +
stat_summary(fun = mean, geom = "point", shape = 18, color = "red", size = 3) +
stat_compare_means(comparisons = list(c("幼龄林", "中龄林"), c("中龄林", "过熟林"), c("幼龄林", "近熟林"), c("成熟林", "过熟林")), label = "p.signif", method = "t.test", size = 5, vjust = 0.5, color = "red") +scale_fill_brewer(palette = "Pastel1") +
labs(x = "Age Group", y = "Tree Height (m)", fill = "Age group") +
theme_minimal(base_size = 14) +
theme(
text = element_text(family = "serif"),
axis.title.x = element_text(face = "bold", size = 14),
axis.title.y = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 12),
legend.position = "top",
panel.grid.major = element_line(color = "grey80", size = 0.5),
panel.grid.minor = element_blank()
) +scale_y_continuous(breaks = seq(0, max(mydata$Height, na.rm = TRUE), by = 5))
dev.off()
View(mydata)
geom_jitter(width = 0.3, size = 2, alpha = 0.6, shape = 21, stroke = 0.5) +
geom_boxplot(outlier.shape = NA, color = "black", alpha = 0.7) +
stat_summary(fun = mean, geom = "point", shape = 18, color = "red", size = 3) +
stat_compare_means(comparisons = list(c("幼龄林", "中龄林"), c("中龄林", "过熟林"), c("幼龄林", "近熟林"), c("成熟林", "过熟林")), label = "p.signif", method = "t.test", size = 5, vjust = 0.5, color = "red") +scale_fill_brewer(palette = "Pastel1") +
labs(x = "Age Group", y = "Tree Height (m)", fill = "Age group") +
theme_minimal(base_size = 14) +
theme(
text = element_text(family = "serif"),
axis.title.x = element_text(face = "bold", size = 14),
axis.title.y = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 12),
legend.position = "top",
panel.grid.major = element_line(color = "grey80", size = 0.5),
panel.grid.minor = element_blank()
) +scale_y_continuous(breaks = seq(0, max(mydata$Height, na.rm = TRUE), by = 5))
ggplot(mydata, aes(x = Age.Group, y = Height, fill = Age.Group)) +
geom_jitter(width = 0.3, size = 2, alpha = 0.6, shape = 21, stroke = 0.5) +
geom_boxplot(outlier.shape = NA, color = "black", alpha = 0.7) +
stat_summary(fun = mean, geom = "point", shape = 18, color = "red", size = 3) +
stat_compare_means(comparisons = list(c("幼龄林", "中龄林"), c("中龄林", "过熟林"), c("幼龄林", "近熟林"), c("成熟林", "过熟林")), label = "p.signif", method = "t.test", size = 5, vjust = 0.5, color = "red") +scale_fill_brewer(palette = "Pastel1") +
labs(x = "Age Group", y = "Tree Height (m)", fill = "Age group") +
theme_minimal(base_size = 14) +
theme(
text = element_text(family = "serif"),
axis.title.x = element_text(face = "bold", size = 14),
axis.title.y = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 12),
legend.position = "top",
panel.grid.major = element_line(color = "grey80", size = 0.5),
panel.grid.minor = element_blank()
) +scale_y_continuous(breaks = seq(0, max(mydata$Height, na.rm = TRUE), by = 5))
library(showtext)
font_add("SimSun", "simsun.ttc")  # 添加宋体字体（路径需要根据操作系统调整）
showtext_auto()
pdf("图3.7.pdf", height = 6, width = 8, family = "GB1")
library(ggplot2)
library(RColorBrewer)
library(ggpubr)
mydata <- read.csv("lysdata.csv", fileEncoding = "GBK", sep = ",")
attach(mydata)
pdf("图3.7.pdf", height = 6, width = 8, family = "GB1")
ggplot(mydata, aes(x = Age.Group, y = Height, fill = Age.Group)) +
geom_jitter(width = 0.3, size = 2, alpha = 0.6, shape = 21, stroke = 0.5) +
geom_boxplot(outlier.shape = NA, color = "black", alpha = 0.7) +
stat_summary(fun = mean, geom = "point", shape = 18, color = "red", size = 3) +
stat_compare_means(comparisons = list(c("幼龄林", "中龄林"), c("中龄林", "过熟林"), c("幼龄林", "近熟林"), c("成熟林", "过熟林")), label = "p.signif", method = "t.test", size = 5, vjust = 0.5, color = "red") +scale_fill_brewer(palette = "Pastel1") +
labs(x = "Age Group", y = "Tree Height (m)", fill = "Age group") +
theme_minimal(base_size = 14) +
theme(
text = element_text(family = "serif"),
axis.title.x = element_text(face = "bold", size = 14),
axis.title.y = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 12),
legend.position = "top",
panel.grid.major = element_line(color = "grey80", size = 0.5),
panel.grid.minor = element_blank()
) +scale_y_continuous(breaks = seq(0, max(mydata$Height, na.rm = TRUE), by = 5))
dev.off()
